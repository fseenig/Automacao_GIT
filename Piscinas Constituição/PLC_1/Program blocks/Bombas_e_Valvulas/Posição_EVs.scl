FUNCTION "Posição_EVs" : Void
{ S7_Optimized_Access := 'TRUE' }
VERSION : 0.1
   VAR_TEMP 
      "temp_clock_0.625Hz" : Int;
      "avaria_ev1.1" : Bool;
      "avaria_ev2.1" : Bool;
      "avaria_ev3.1" : Bool;
      "avaria_ev4.1" : Bool;
      "avaria_ev5.1" : Bool;
      "avaria_ev1.2" : Bool;
      "avaria_ev2.2" : Bool;
      "avaria_ev3.2" : Bool;
      "avaria_ev4.2" : Bool;
      "avaria_ev5.2" : Bool;
   END_VAR


BEGIN
	REGION POSICAO_FILTRO_1
	    IF "EV1.1_ABERTA" = TRUE AND "EV5.1_ABERTA" = TRUE AND
	        "EV2.1_FECHADA" = TRUE AND "EV4.1_FECHADA" = TRUE AND
	        "EV3.1_FECHADA" = TRUE AND
	        
	        "EV1.1_FECHADA" = FALSE AND "EV5.1_FECHADA" = FALSE AND
	        "EV2.1_ABERTA" = FALSE AND "EV4.1_ABERTA" = FALSE AND
	        "EV3.1_ABERTA" = FALSE
	    THEN
	        "Dados_Ciclo".POS_EVS_FILT_1 := 'FILTRACAO';
	    ELSE
	        
	        IF "EV2.1_ABERTA" = TRUE AND "EV3.1_ABERTA" = TRUE AND
	            "EV1.1_FECHADA" = TRUE AND "EV4.1_FECHADA" = TRUE AND
	            "EV5.1_FECHADA" = TRUE AND
	            
	            "EV2.1_FECHADA" = FALSE AND "EV3.1_FECHADA" = FALSE AND
	            "EV1.1_ABERTA" = FALSE AND "EV4.1_ABERTA" = FALSE AND
	            "EV5.1_ABERTA" = FALSE
	        THEN
	            "Dados_Ciclo".POS_EVS_FILT_1 := 'LAVAGEM';
	        ELSE
	            
	            IF "EV1.1_ABERTA" = TRUE AND "EV4.1_ABERTA" = TRUE AND
	                "EV2.1_FECHADA" = TRUE AND "EV3.1_FECHADA" = TRUE AND
	                "EV5.1_FECHADA" = TRUE AND
	                
	                "EV1.1_FECHADA" = FALSE AND "EV4.1_FECHADA" = FALSE AND
	                "EV2.1_ABERTA" = FALSE AND "EV3.1_ABERTA" = FALSE AND
	                "EV5.1_ABERTA" = FALSE
	            THEN
	                "Dados_Ciclo".POS_EVS_FILT_1 := 'RINSE';
	            ELSE
	                
	                IF "EV1.1_ABERTA" = TRUE AND "EV3.1_ABERTA" = TRUE AND
	                    "EV2.1_FECHADA" = TRUE AND "EV4.1_FECHADA" = TRUE AND
	                    "EV5.1_FECHADA" = TRUE AND
	                    
	                    "EV1.1_FECHADA" = FALSE AND "EV3.1_FECHADA" = FALSE AND
	                    "EV2.1_ABERTA" = FALSE AND "EV4.1_ABERTA" = FALSE AND
	                    "EV5.1_ABERTA" = FALSE
	                THEN
	                    "Dados_Ciclo".POS_EVS_FILT_1 := 'ESVAZIAMENTO';
	                ELSE
	                    
	                    IF "EV1.1_FECHADA" = TRUE AND "EV2.1_FECHADA" = TRUE AND
	                        "EV3.1_FECHADA" = TRUE AND "EV4.1_FECHADA" = TRUE AND
	                        "EV5.1_FECHADA" = TRUE AND
	                        
	                        "EV1.1_ABERTA" = FALSE AND "EV2.1_ABERTA" = FALSE AND
	                        "EV3.1_ABERTA" = FALSE AND "EV4.1_ABERTA" = FALSE AND
	                        "EV5.1_ABERTA" = FALSE
	                    THEN
	                        "Dados_Ciclo".POS_EVS_FILT_1 := 'FECHO';
	                    ELSE
	                        "Dados_Ciclo".POS_EVS_FILT_1 := 'NULL';
	                    END_IF;
	                END_IF;
	            END_IF;
	        END_IF;
	    END_IF;
	    
	END_REGION
	
	REGION POSICAO_FILTRO_2
	    IF "EV1.2_ABERTA" = TRUE AND "EV5.2_ABERTA" = TRUE AND
	        "EV2.2_FECHADA" = TRUE AND "EV4.2_FECHADA" = TRUE AND
	        "EV3.2_FECHADA" = TRUE AND
	        
	        "EV1.2_FECHADA" = FALSE AND "EV5.2_FECHADA" = FALSE AND
	        "EV2.2_ABERTA" = FALSE AND "EV4.2_ABERTA" = FALSE AND
	        "EV3.2_ABERTA" = FALSE
	    THEN
	        "Dados_Ciclo".POS_EVS_FILT_2 := 'FILTRACAO';
	    ELSE
	        
	        IF "EV2.2_ABERTA" = TRUE AND "EV3.2_ABERTA" = TRUE AND
	            "EV1.2_FECHADA" = TRUE AND "EV4.2_FECHADA" = TRUE AND
	            "EV5.2_FECHADA" = TRUE AND
	            
	            "EV2.2_FECHADA" = FALSE AND "EV3.2_FECHADA" = FALSE AND
	            "EV1.2_ABERTA" = FALSE AND "EV4.2_ABERTA" = FALSE AND
	            "EV5.2_ABERTA" = FALSE
	        THEN
	            "Dados_Ciclo".POS_EVS_FILT_2 := 'LAVAGEM';
	        ELSE
	            
	            IF "EV1.2_ABERTA" = TRUE AND "EV4.2_ABERTA" = TRUE AND
	                "EV2.2_FECHADA" = TRUE AND "EV3.2_FECHADA" = TRUE AND
	                "EV5.2_FECHADA" = TRUE AND
	                
	                "EV1.2_FECHADA" = FALSE AND "EV4.2_FECHADA" = FALSE AND
	                "EV2.2_ABERTA" = FALSE AND "EV3.2_ABERTA" = FALSE AND
	                "EV5.2_ABERTA" = FALSE
	            THEN
	                "Dados_Ciclo".POS_EVS_FILT_2 := 'RINSE';
	            ELSE
	                
	                IF "EV1.2_ABERTA" = TRUE AND "EV3.2_ABERTA" = TRUE AND
	                    "EV2.2_FECHADA" = TRUE AND "EV4.2_FECHADA" = TRUE AND
	                    "EV5.2_FECHADA" = TRUE AND
	                    
	                    "EV1.2_FECHADA" = FALSE AND "EV3.2_FECHADA" = FALSE AND
	                    "EV2.2_ABERTA" = FALSE AND "EV4.2_ABERTA" = FALSE AND
	                    "EV5.2_ABERTA" = FALSE
	                THEN
	                    "Dados_Ciclo".POS_EVS_FILT_2 := 'ESVAZIAMENTO';
	                ELSE
	                    
	                    IF "EV1.2_FECHADA" = TRUE AND "EV2.2_FECHADA" = TRUE AND
	                        "EV3.2_FECHADA" = TRUE AND "EV4.2_FECHADA" = TRUE AND
	                        "EV5.2_FECHADA" = TRUE AND
	                        
	                        "EV1.2_ABERTA" = FALSE AND "EV2.2_ABERTA" = FALSE AND
	                        "EV3.2_ABERTA" = FALSE AND "EV4.2_ABERTA" = FALSE AND
	                        "EV5.2_ABERTA" = FALSE
	                    THEN
	                        "Dados_Ciclo".POS_EVS_FILT_2 := 'FECHO';
	                    ELSE
	                        "Dados_Ciclo".POS_EVS_FILT_2 := 'NULL';
	                    END_IF;
	                END_IF;
	            END_IF;
	        END_IF;
	    END_IF;
	    
	END_REGION
	
	//Envio de estado de avaria para hmi
	//conversão de clock para piscar quando ocorre avaria de EVs
	#"temp_clock_0.625Hz" := BOOL_TO_INT("Clock_0.625Hz");
	
	//FILTRO 1
	REGION Estado_EV1.1
	    "T_ABERTURA_EV1.1_HMI".TON(IN := "EV1.1",                   //Quando EV1.1 recebe sinal para abrir, inicia uma contagem
	   PT := "Inputs_HMI".T_POS_EVS);
	    
	    "T_FECHO_EV1.1_HMI".TON(IN := NOT "EV1.1",                  //Quando EV1.1 recebe sinal para fechar, inicia uma contagem
	   PT := "Inputs_HMI".T_POS_EVS);
	                                                                //No final da contagem avalia se a EV está na posição pretendida
	                                                                
	    IF ("T_ABERTURA_EV1.1_HMI".Q AND (NOT "EV1.1_ABERTA" OR ("EV1.1_ABERTA" AND "EV1.1_FECHADA"))) OR   //Condição de avaria
	        ("T_FECHO_EV1.1_HMI".Q AND (NOT "EV1.1_FECHADA" OR ("EV1.1_ABERTA" AND "EV1.1_FECHADA"))) THEN  //para evitar dois estados 
	       #"avaria_ev1.1" := TRUE;                                                                     //na pagcmd evs da hmi
	    ELSE
	       #"avaria_ev1.1" := FALSE;
	    END_IF;
	    
	    
	    IF #"avaria_ev1.1" = FALSE AND "EV1.1_ABERTA" AND NOT "EV1.1_FECHADA" THEN //Condição de EV1.1 ABERTA
	        "Estados_HMI"."EV1.1_ESTADO" := 1;
	        "Estados_HMI"."EV1.1_ESTADO_PAGCMD" := 1;
	    END_IF;
	    
	    
	    IF #"avaria_ev1.1" = FALSE AND "EV1.1_FECHADA" AND NOT "EV1.1_ABERTA" THEN //Condição de EV1.1 Fechada
	        "Estados_HMI"."EV1.1_ESTADO" := 0;
	        "Estados_HMI"."EV1.1_ESTADO_PAGCMD" := 0;
	    END_IF;
	    
	    
	    IF ("T_ABERTURA_EV1.1_HMI".Q AND (NOT "EV1.1_ABERTA" OR ("EV1.1_ABERTA" AND "EV1.1_FECHADA"))) OR   //Condição de avaria
	        ("T_FECHO_EV1.1_HMI".Q AND (NOT "EV1.1_FECHADA" OR ("EV1.1_ABERTA" AND "EV1.1_FECHADA"))) THEN
	        
	        "Estados_HMI"."EV1.1_ESTADO_PAGCMD" := 2;
	        
	        CASE #"temp_clock_0.625Hz" OF
	            0:
	                "Estados_HMI"."EV1.1_ESTADO" := 0;
	                
	            1:
	                "Estados_HMI"."EV1.1_ESTADO" := 2;
	        END_CASE;
	    END_IF;
	    
	    IF "T_ABERTURA_EV1.1_HMI".Q = FALSE AND "T_FECHO_EV1.1_HMI".Q = FALSE AND
	        "EV1.1_ABERTA" = FALSE AND "EV1.1_FECHADA" = FALSE THEN  //Condição de transição das EVs
	        
	        "Estados_HMI"."EV1.1_ESTADO_PAGCMD" := 3;
	        
	        CASE #"temp_clock_0.625Hz" OF
	            0:
	                "Estados_HMI"."EV1.1_ESTADO" := 0;
	            1:
	                "Estados_HMI"."EV1.1_ESTADO" := 3;
	        END_CASE;
	    END_IF;
	    
	END_REGION
	
	REGION Estado_EV2.1
	    
	    "T_ABERTURA_EV2.1_HMI".TON(IN := "EV2.1",                   //Quando EV2.1 recebe sinal para abrir, inicia uma contagem
	                               PT := "Inputs_HMI".T_POS_EVS);
	    
	    "T_FECHO_EV2.1_HMI".TON(IN := NOT "EV2.1",                  //Quando EV2.1 recebe sinal para fechar, inicia uma contagem
	                            PT := "Inputs_HMI".T_POS_EVS);
	                                                                //No final da contagem avalia se a EV está na posição pretendida
	                                                                
	    IF ("T_ABERTURA_EV2.1_HMI".Q AND (NOT "EV2.1_ABERTA" OR ("EV2.1_ABERTA" AND "EV2.1_FECHADA"))) OR   //Condição de avaria
	        ("T_FECHO_EV2.1_HMI".Q AND (NOT "EV2.1_FECHADA" OR ("EV2.1_ABERTA" AND "EV2.1_FECHADA"))) THEN
	        #"avaria_ev2.1" := TRUE;
	    ELSE
	        #"avaria_ev2.1" := FALSE;
	    END_IF;
	    
	                                                                
	    IF #"avaria_ev2.1" = FALSE AND"EV2.1_ABERTA" AND NOT "EV2.1_FECHADA" THEN //Condição de EV2.1 ABERTA
	        "Estados_HMI"."EV2.1_ESTADO" := 1;
	        "Estados_HMI"."EV2.1_ESTADO_PAGCMD" := 1;
	    END_IF;
	    
	    
	    IF #"avaria_ev2.1" = FALSE AND"EV2.1_FECHADA" AND NOT "EV2.1_ABERTA" THEN //Condição de EV2.1 Fechada
	        "Estados_HMI"."EV2.1_ESTADO" := 0;
	        "Estados_HMI"."EV2.1_ESTADO_PAGCMD" := 0;
	    END_IF;
	    
	    
	    IF ("T_ABERTURA_EV2.1_HMI".Q AND (NOT "EV2.1_ABERTA" OR ("EV2.1_ABERTA" AND "EV2.1_FECHADA"))) OR   //Condição de avaria
	        ("T_FECHO_EV2.1_HMI".Q AND (NOT "EV2.1_FECHADA" OR ("EV2.1_ABERTA" AND "EV2.1_FECHADA"))) THEN
	        
	        "Estados_HMI"."EV2.1_ESTADO_PAGCMD" := 2;
	        
	        CASE #"temp_clock_0.625Hz" OF
	            0:
	                "Estados_HMI"."EV2.1_ESTADO" := 0;
	            1:
	                "Estados_HMI"."EV2.1_ESTADO" := 2;
	        END_CASE;
	    END_IF;
	    
	    IF "T_ABERTURA_EV2.1_HMI".Q = FALSE AND "T_FECHO_EV2.1_HMI".Q = FALSE AND
	        "EV2.1_ABERTA" = FALSE AND "EV2.1_FECHADA" = FALSE THEN  //Condição de transição das EVs
	        
	        "Estados_HMI"."EV2.1_ESTADO_PAGCMD" := 3;
	        
	        CASE #"temp_clock_0.625Hz" OF
	            0:
	                "Estados_HMI"."EV2.1_ESTADO" := 0;
	            1:
	                "Estados_HMI"."EV2.1_ESTADO" := 3;
	        END_CASE;
	    END_IF;
	                                                                
	END_REGION
	
	REGION Estado_EV3.1
	    
	    "T_ABERTURA_EV3.1_HMI".TON(IN := "EV3.1",                   //Quando EV3.1 recebe sinal para abrir, inicia uma contagem
	                               PT := "Inputs_HMI".T_POS_EVS);
	    
	    "T_FECHO_EV3.1_HMI".TON(IN := NOT "EV3.1",                  //Quando EV3.1 recebe sinal para fechar, inicia uma contagem
	                            PT := "Inputs_HMI".T_POS_EVS);
	    //No final da contagem avalia se a EV está na posição pretendida
	    
	    IF ("T_ABERTURA_EV3.1_HMI".Q AND (NOT "EV3.1_ABERTA" OR ("EV3.1_ABERTA" AND "EV3.1_FECHADA"))) OR   //Condição de avaria
	        ("T_FECHO_EV3.1_HMI".Q AND (NOT "EV3.1_FECHADA" OR ("EV3.1_ABERTA" AND "EV3.1_FECHADA"))) THEN
	        #"avaria_ev3.1" := TRUE;
	    ELSE
	        #"avaria_ev3.1" := FALSE;
	    END_IF;
	    
	    
	    IF #"avaria_ev3.1" = FALSE AND "EV3.1_ABERTA" AND NOT "EV3.1_FECHADA" THEN //Condição de EV3.1 ABERTA
	        "Estados_HMI"."EV3.1_ESTADO" := 1;
	        "Estados_HMI"."EV3.1_ESTADO_PAGCMD" := 1;
	    END_IF;
	    
	    
	    IF #"avaria_ev3.1" = FALSE AND "EV3.1_FECHADA" AND NOT "EV3.1_ABERTA" THEN //Condição de EV3.1 Fechada
	        "Estados_HMI"."EV3.1_ESTADO" := 0;
	        "Estados_HMI"."EV3.1_ESTADO_PAGCMD" := 0;
	    END_IF;
	    
	    
	    IF ("T_ABERTURA_EV3.1_HMI".Q AND (NOT "EV3.1_ABERTA" OR ("EV3.1_ABERTA" AND "EV3.1_FECHADA"))) OR   //Condição de avaria
	        ("T_FECHO_EV3.1_HMI".Q AND (NOT "EV3.1_FECHADA" OR ("EV3.1_ABERTA" AND "EV3.1_FECHADA"))) THEN
	        
	        "Estados_HMI"."EV3.1_ESTADO_PAGCMD" := 2;
	        
	        CASE #"temp_clock_0.625Hz" OF
	            0:
	                "Estados_HMI"."EV3.1_ESTADO" := 0;
	            1:
	                "Estados_HMI"."EV3.1_ESTADO" := 2;
	        END_CASE;
	    END_IF;
	    
	    IF "T_ABERTURA_EV3.1_HMI".Q = FALSE AND "T_FECHO_EV3.1_HMI".Q = FALSE AND
	        "EV3.1_ABERTA" = FALSE AND "EV3.1_FECHADA" = FALSE THEN  //Condição de transição das EVs
	        
	        "Estados_HMI"."EV3.1_ESTADO_PAGCMD" := 3;
	        
	        CASE #"temp_clock_0.625Hz" OF
	            0:
	                "Estados_HMI"."EV3.1_ESTADO" := 0;
	            1:
	                "Estados_HMI"."EV3.1_ESTADO" := 3;
	        END_CASE;
	    END_IF;
	    
	END_REGION
	
	REGION Estado_EV4.1
	    
	    "T_ABERTURA_EV4.1_HMI".TON(IN := "EV4.1",                   //Quando EV4.1 recebe sinal para abrir, inicia uma contagem
	                               PT := "Inputs_HMI".T_POS_EVS);
	    
	    "T_FECHO_EV4.1_HMI".TON(IN := NOT "EV4.1",                  //Quando EV4.1 recebe sinal para fechar, inicia uma contagem
	                            PT := "Inputs_HMI".T_POS_EVS);
	                                                                //No final da contagem avalia se a EV está na posição pretendida
	                                                                
	    IF ("T_ABERTURA_EV4.1_HMI".Q AND (NOT "EV4.1_ABERTA" OR ("EV4.1_ABERTA" AND "EV4.1_FECHADA"))) OR   //Condição de avaria
	        ("T_FECHO_EV4.1_HMI".Q AND (NOT "EV4.1_FECHADA" OR ("EV4.1_ABERTA" AND "EV4.1_FECHADA"))) THEN
	        #"avaria_ev4.1" := TRUE;
	    ELSE
	        #"avaria_ev4.1" := FALSE;
	    END_IF;
	                                                                
	    IF #"avaria_ev4.1" = FALSE AND "EV4.1_ABERTA" AND NOT "EV4.1_FECHADA" THEN //Condição de EV4.1 ABERTA
	        "Estados_HMI"."EV4.1_ESTADO" := 1;
	        "Estados_HMI"."EV4.1_ESTADO_PAGCMD" := 1;
	    END_IF;
	    
	    
	    IF #"avaria_ev4.1" = FALSE AND "EV4.1_FECHADA" AND NOT "EV4.1_ABERTA" THEN //Condição de EV4.1 Fechada
	        "Estados_HMI"."EV4.1_ESTADO" := 0;
	        "Estados_HMI"."EV4.1_ESTADO_PAGCMD" := 0;
	    END_IF;
	    
	    
	    IF ("T_ABERTURA_EV4.1_HMI".Q AND (NOT "EV4.1_ABERTA" OR ("EV4.1_ABERTA" AND "EV4.1_FECHADA"))) OR   //Condição de avaria
	        ("T_FECHO_EV4.1_HMI".Q AND (NOT "EV4.1_FECHADA" OR ("EV4.1_ABERTA" AND "EV4.1_FECHADA"))) THEN
	        
	        "Estados_HMI"."EV4.1_ESTADO_PAGCMD" := 2;
	        
	        CASE #"temp_clock_0.625Hz" OF
	            0:
	                "Estados_HMI"."EV4.1_ESTADO" := 0;
	            1:
	                "Estados_HMI"."EV4.1_ESTADO" := 2;
	        END_CASE;
	    END_IF;
	    
	    IF "T_ABERTURA_EV4.1_HMI".Q = FALSE AND "T_FECHO_EV4.1_HMI".Q = FALSE AND
	        "EV4.1_ABERTA" = FALSE AND "EV4.1_FECHADA" = FALSE THEN  //Condição de transição das EVs
	        
	        "Estados_HMI"."EV4.1_ESTADO_PAGCMD" := 3;
	        
	        CASE #"temp_clock_0.625Hz" OF
	            0:
	                "Estados_HMI"."EV4.1_ESTADO" := 0;
	            1:
	                "Estados_HMI"."EV4.1_ESTADO" := 3;
	        END_CASE;
	    END_IF;
	    
	END_REGION
	
	REGION Estado_EV5.1
	    
	    "T_ABERTURA_EV5.1_HMI".TON(IN := "EV5.1",                   //Quando EV5.1 recebe sinal para abrir, inicia uma contagem
	                               PT := "Inputs_HMI".T_POS_EVS);
	    
	    "T_FECHO_EV5.1_HMI".TON(IN := NOT "EV5.1",                  //Quando EV5.1 recebe sinal para fechar, inicia uma contagem
	                            PT := "Inputs_HMI".T_POS_EVS);
	                                                                //No final da contagem avalia se a EV está na posição pretendida
	                                                                
	    IF ("T_ABERTURA_EV5.1_HMI".Q AND (NOT "EV5.1_ABERTA" OR ("EV5.1_ABERTA" AND "EV5.1_FECHADA"))) OR   //Condição de avaria
	        ("T_FECHO_EV5.1_HMI".Q AND (NOT "EV5.1_FECHADA" OR ("EV5.1_ABERTA" AND "EV5.1_FECHADA"))) THEN
	        #"avaria_ev5.1" := TRUE;
	    ELSE
	        #"avaria_ev5.1" := FALSE;
	    END_IF;
	                                                                
	    IF #"avaria_ev5.1" = FALSE AND "EV5.1_ABERTA" AND NOT "EV5.1_FECHADA" THEN //Condição de EV5.1 ABERTA
	        "Estados_HMI"."EV5.1_ESTADO" := 1;
	        "Estados_HMI"."EV5.1_ESTADO_PAGCMD" := 1;
	    END_IF;
	    
	    
	    IF #"avaria_ev5.1" = FALSE AND "EV5.1_FECHADA" AND NOT "EV5.1_ABERTA" THEN //Condição de EV5.1 Fechada
	        "Estados_HMI"."EV5.1_ESTADO" := 0;
	        "Estados_HMI"."EV5.1_ESTADO_PAGCMD" := 0;
	    END_IF;
	    
	    
	    IF ("T_ABERTURA_EV5.1_HMI".Q AND (NOT "EV5.1_ABERTA" OR ("EV5.1_ABERTA" AND "EV5.1_FECHADA"))) OR   //Condição de avaria
	        ("T_FECHO_EV5.1_HMI".Q AND (NOT "EV5.1_FECHADA" OR ("EV5.1_ABERTA" AND "EV5.1_FECHADA"))) THEN
	        
	        "Estados_HMI"."EV5.1_ESTADO_PAGCMD" := 2;
	        
	        CASE #"temp_clock_0.625Hz" OF
	            0:
	                "Estados_HMI"."EV5.1_ESTADO" := 0;
	            1:
	                "Estados_HMI"."EV5.1_ESTADO" := 2;
	        END_CASE;
	    END_IF;
	    
	    IF "T_ABERTURA_EV5.1_HMI".Q = FALSE AND "T_FECHO_EV5.1_HMI".Q = FALSE AND
	        "EV5.1_ABERTA" = FALSE AND "EV5.1_FECHADA" = FALSE THEN  //Condição de transição das EVs
	        
	        "Estados_HMI"."EV5.1_ESTADO_PAGCMD" := 3;
	        
	        CASE #"temp_clock_0.625Hz" OF
	            0:
	                "Estados_HMI"."EV5.1_ESTADO" := 0;
	            1:
	                "Estados_HMI"."EV5.1_ESTADO" := 3;
	        END_CASE;
	    END_IF;
	    
	END_REGION
	
	//FILTRO 2
	
	REGION Estado_EV1.2
	    "T_ABERTURA_EV1.2_HMI".TON(IN := "EV1.2",                   //Quando EV1.2 recebe sinal para abrir, inicia uma contagem
	                               PT := "Inputs_HMI".T_POS_EVS);
	    
	    "T_FECHO_EV1.2_HMI".TON(IN := NOT "EV1.2",                  //Quando EV1.2 recebe sinal para fechar, inicia uma contagem
	                            PT := "Inputs_HMI".T_POS_EVS);
	    //No final da contagem avalia se a EV está na posição pretendida
	    
	    IF ("T_ABERTURA_EV1.2_HMI".Q AND (NOT "EV1.2_ABERTA" OR ("EV1.2_ABERTA" AND "EV1.2_FECHADA"))) OR   //Condição de avaria
	        ("T_FECHO_EV1.2_HMI".Q AND (NOT "EV1.2_FECHADA" OR ("EV1.2_ABERTA" AND "EV1.2_FECHADA"))) THEN
	        #"avaria_ev1.2" := TRUE;
	    ELSE
	        #"avaria_ev1.2" := FALSE;
	    END_IF;
	        
	    IF #"avaria_ev1.2" = FALSE AND "EV1.2_ABERTA" AND NOT "EV1.2_FECHADA" THEN //Condição de EV1.2 ABERTA
	        "Estados_HMI"."EV1.2_ESTADO" := 1;
	        "Estados_HMI"."EV1.2_ESTADO_PAGCMD" := 1;
	    END_IF;
	    
	    
	    IF #"avaria_ev1.2" = FALSE AND "EV1.2_FECHADA" AND NOT "EV1.2_ABERTA" THEN //Condição de EV1.2 Fechada
	        "Estados_HMI"."EV1.2_ESTADO" := 0;
	        "Estados_HMI"."EV1.2_ESTADO_PAGCMD" := 0;
	    END_IF;
	    
	    
	    IF ("T_ABERTURA_EV1.2_HMI".Q AND (NOT "EV1.2_ABERTA" OR ("EV1.2_ABERTA" AND "EV1.2_FECHADA"))) OR   //Condição de avaria
	        ("T_FECHO_EV1.2_HMI".Q AND (NOT "EV1.2_FECHADA" OR ("EV1.2_ABERTA" AND "EV1.2_FECHADA"))) THEN
	        
	        "Estados_HMI"."EV1.2_ESTADO_PAGCMD" := 2;
	        
	        CASE #"temp_clock_0.625Hz" OF
	            0:
	                "Estados_HMI"."EV1.2_ESTADO" := 0;
	            1:
	                "Estados_HMI"."EV1.2_ESTADO" := 2;
	        END_CASE;
	    END_IF;
	    
	    IF "T_ABERTURA_EV1.2_HMI".Q = FALSE AND "T_FECHO_EV1.2_HMI".Q = FALSE AND
	        "EV1.2_ABERTA" = FALSE AND "EV1.2_FECHADA" = FALSE THEN  //Condição de transição das EVs
	        
	        "Estados_HMI"."EV1.2_ESTADO_PAGCMD" := 3;
	        
	        CASE #"temp_clock_0.625Hz" OF
	            0:
	                "Estados_HMI"."EV1.2_ESTADO" := 0;
	            1:
	                "Estados_HMI"."EV1.2_ESTADO" := 3;
	        END_CASE;
	    END_IF;
	    
	END_REGION
	
	REGION Estado_EV2.2
	    
	    "T_ABERTURA_EV2.2_HMI".TON(IN := "EV2.2",                   //Quando EV2.2 recebe sinal para abrir, inicia uma contagem
	                               PT := "Inputs_HMI".T_POS_EVS);
	    
	    "T_FECHO_EV2.2_HMI".TON(IN := NOT "EV2.2",                  //Quando EV2.2 recebe sinal para fechar, inicia uma contagem
	                            PT := "Inputs_HMI".T_POS_EVS);
	    //No final da contagem avalia se a EV está na posição pretendida
	    
	    IF ("T_ABERTURA_EV2.2_HMI".Q AND (NOT "EV2.2_ABERTA" OR ("EV2.2_ABERTA" AND "EV2.2_FECHADA"))) OR   //Condição de avaria
	        ("T_FECHO_EV2.2_HMI".Q AND (NOT "EV2.2_FECHADA" OR ("EV2.2_ABERTA" AND "EV2.2_FECHADA"))) THEN
	        #"avaria_ev2.2" := TRUE;
	    ELSE
	        #"avaria_ev2.2" := FALSE;
	    END_IF;
	    
	    IF #"avaria_ev2.2" = FALSE AND "EV2.2_ABERTA" AND NOT "EV2.2_FECHADA" THEN //Condição de EV2.2 ABERTA
	        "Estados_HMI"."EV2.2_ESTADO" := 1;
	        "Estados_HMI"."EV2.2_ESTADO_PAGCMD" := 1;
	    END_IF;
	    
	    
	    IF #"avaria_ev2.2" = FALSE AND "EV2.2_FECHADA" AND NOT "EV2.2_ABERTA" THEN //Condição de EV2.2 Fechada
	        "Estados_HMI"."EV2.2_ESTADO" := 0;
	        "Estados_HMI"."EV2.2_ESTADO_PAGCMD" := 0;
	    END_IF;
	    
	    
	    IF ("T_ABERTURA_EV2.2_HMI".Q AND (NOT "EV2.2_ABERTA" OR ("EV2.2_ABERTA" AND "EV2.2_FECHADA"))) OR   //Condição de avaria
	        ("T_FECHO_EV2.2_HMI".Q AND (NOT "EV2.2_FECHADA" OR ("EV2.2_ABERTA" AND "EV2.2_FECHADA"))) THEN
	        
	        "Estados_HMI"."EV2.2_ESTADO_PAGCMD" := 2;
	        
	        CASE #"temp_clock_0.625Hz" OF
	            0:
	                "Estados_HMI"."EV2.2_ESTADO" := 0;
	            1:
	                "Estados_HMI"."EV2.2_ESTADO" := 2;
	        END_CASE;
	    END_IF;
	    
	    IF "T_ABERTURA_EV2.2_HMI".Q = FALSE AND "T_FECHO_EV2.2_HMI".Q = FALSE AND
	        "EV2.2_ABERTA" = FALSE AND "EV2.2_FECHADA" = FALSE THEN  //Condição de transição das EVs
	        
	        "Estados_HMI"."EV2.2_ESTADO_PAGCMD" := 3;
	        
	        CASE #"temp_clock_0.625Hz" OF
	            0:
	                "Estados_HMI"."EV2.2_ESTADO" := 0;
	            1:
	                "Estados_HMI"."EV2.2_ESTADO" := 3;
	        END_CASE;
	    END_IF;
	    
	END_REGION
	
	REGION Estado_EV3.2
	    
	    "T_ABERTURA_EV3.2_HMI".TON(IN := "EV3.2",                   //Quando EV3.2 recebe sinal para abrir, inicia uma contagem
	                               PT := "Inputs_HMI".T_POS_EVS);
	    
	    "T_FECHO_EV3.2_HMI".TON(IN := NOT "EV3.2",                  //Quando EV3.2 recebe sinal para fechar, inicia uma contagem
	                            PT := "Inputs_HMI".T_POS_EVS);
	    //No final da contagem avalia se a EV está na posição pretendida
	    
	    IF ("T_ABERTURA_EV3.2_HMI".Q AND (NOT "EV3.2_ABERTA" OR ("EV3.2_ABERTA" AND "EV3.2_FECHADA"))) OR   //Condição de avaria
	        ("T_FECHO_EV3.2_HMI".Q AND (NOT "EV3.2_FECHADA" OR ("EV3.2_ABERTA" AND "EV3.2_FECHADA"))) THEN
	        #"avaria_ev3.2" := TRUE;
	    ELSE
	        #"avaria_ev3.2" := FALSE;
	    END_IF;
	        
	    
	    IF #"avaria_ev3.2" = FALSE AND "EV3.2_ABERTA" AND NOT "EV3.2_FECHADA" THEN //Condição de EV3.2 ABERTA
	        "Estados_HMI"."EV3.2_ESTADO" := 1;
	        "Estados_HMI"."EV3.2_ESTADO_PAGCMD" := 1;
	    END_IF;
	    
	    
	    IF #"avaria_ev3.2" = FALSE AND "EV3.2_FECHADA" AND NOT "EV3.2_ABERTA" THEN //Condição de EV3.2 Fechada
	        "Estados_HMI"."EV3.2_ESTADO" := 0;
	        "Estados_HMI"."EV3.2_ESTADO_PAGCMD" := 0;
	    END_IF;
	    
	    
	    IF ("T_ABERTURA_EV3.2_HMI".Q AND (NOT "EV3.2_ABERTA" OR ("EV3.2_ABERTA" AND "EV3.2_FECHADA"))) OR   //Condição de avaria
	        ("T_FECHO_EV3.2_HMI".Q AND (NOT "EV3.2_FECHADA" OR ("EV3.2_ABERTA" AND "EV3.2_FECHADA"))) THEN
	        
	        "Estados_HMI"."EV3.2_ESTADO_PAGCMD" := 2;
	        
	        CASE #"temp_clock_0.625Hz" OF
	            0:
	                "Estados_HMI"."EV3.2_ESTADO" := 0;
	            1:
	                "Estados_HMI"."EV3.2_ESTADO" := 2;
	        END_CASE;
	    END_IF;
	    
	    IF "T_ABERTURA_EV3.2_HMI".Q = FALSE AND "T_FECHO_EV3.2_HMI".Q = FALSE AND
	        "EV3.2_ABERTA" = FALSE AND "EV3.2_FECHADA" = FALSE THEN  //Condição de transição das EVs
	        
	        "Estados_HMI"."EV3.2_ESTADO_PAGCMD" := 3;
	        
	        CASE #"temp_clock_0.625Hz" OF
	            0:
	                "Estados_HMI"."EV3.2_ESTADO" := 0;
	            1:
	                "Estados_HMI"."EV3.2_ESTADO" := 3;
	        END_CASE;
	    END_IF;
	    
	END_REGION
	
	REGION Estado_EV4.2
	    
	    "T_ABERTURA_EV4.2_HMI".TON(IN := "EV4.2",                   //Quando EV4.2 recebe sinal para abrir, inicia uma contagem
	                               PT := "Inputs_HMI".T_POS_EVS);
	    
	    "T_FECHO_EV4.2_HMI".TON(IN := NOT "EV4.2",                  //Quando EV4.2 recebe sinal para fechar, inicia uma contagem
	                            PT := "Inputs_HMI".T_POS_EVS);
	    //No final da contagem avalia se a EV está na posição pretendida
	    
	    IF ("T_ABERTURA_EV4.2_HMI".Q AND (NOT "EV4.2_ABERTA" OR ("EV4.2_ABERTA" AND "EV4.2_FECHADA"))) OR   //Condição de avaria
	        ("T_FECHO_EV4.2_HMI".Q AND (NOT "EV4.2_FECHADA" OR ("EV4.2_ABERTA" AND "EV4.2_FECHADA"))) THEN
	        #"avaria_ev4.2" := TRUE;
	    ELSE
	        #"avaria_ev4.2" := FALSE;
	    END_IF;
	    
	    
	    IF #"avaria_ev4.2" = FALSE AND "EV4.2_ABERTA" AND NOT "EV4.2_FECHADA" THEN //Condição de EV4.2 ABERTA
	        "Estados_HMI"."EV4.2_ESTADO" := 1;
	        "Estados_HMI"."EV4.2_ESTADO_PAGCMD" := 1;
	    END_IF;
	    
	    
	    IF #"avaria_ev4.2" = FALSE AND "EV4.2_FECHADA" AND NOT "EV4.2_ABERTA" THEN //Condição de EV4.2 Fechada
	        "Estados_HMI"."EV4.2_ESTADO" := 0;
	        "Estados_HMI"."EV4.2_ESTADO_PAGCMD" := 0;
	    END_IF;
	    
	    
	    IF ("T_ABERTURA_EV4.2_HMI".Q AND (NOT "EV4.2_ABERTA" OR ("EV4.2_ABERTA" AND "EV4.2_FECHADA"))) OR   //Condição de avaria
	        ("T_FECHO_EV4.2_HMI".Q AND (NOT "EV4.2_FECHADA" OR ("EV4.2_ABERTA" AND "EV4.2_FECHADA"))) THEN
	        
	        "Estados_HMI"."EV4.2_ESTADO_PAGCMD" := 2;
	        
	        CASE #"temp_clock_0.625Hz" OF
	            0:
	                "Estados_HMI"."EV4.2_ESTADO" := 0;
	            1:
	                "Estados_HMI"."EV4.2_ESTADO" := 2;
	        END_CASE;
	    END_IF;
	    
	    IF "T_ABERTURA_EV4.2_HMI".Q = FALSE AND "T_FECHO_EV4.2_HMI".Q = FALSE AND
	        "EV4.2_ABERTA" = FALSE AND "EV4.2_FECHADA" = FALSE THEN  //Condição de transição das EVs
	        
	        "Estados_HMI"."EV4.2_ESTADO_PAGCMD" := 3;
	        
	        CASE #"temp_clock_0.625Hz" OF
	            0:
	                "Estados_HMI"."EV4.2_ESTADO" := 0;
	            1:
	                "Estados_HMI"."EV4.2_ESTADO" := 3;
	        END_CASE;
	    END_IF;
	    
	END_REGION
	
	REGION Estado_EV5.2
	    
	    "T_ABERTURA_EV5.2_HMI".TON(IN := "EV5.2",                   //Quando EV5.2 recebe sinal para abrir, inicia uma contagem
	                               PT := "Inputs_HMI".T_POS_EVS);
	    
	    "T_FECHO_EV5.2_HMI".TON(IN := NOT "EV5.2",                  //Quando EV5.2 recebe sinal para fechar, inicia uma contagem
	                            PT := "Inputs_HMI".T_POS_EVS);
	    //No final da contagem avalia se a EV está na posição pretendida
	    
	    IF ("T_ABERTURA_EV5.2_HMI".Q AND (NOT "EV5.2_ABERTA" OR ("EV5.2_ABERTA" AND "EV5.2_FECHADA"))) OR   //Condição de avaria
	        ("T_FECHO_EV5.2_HMI".Q AND (NOT "EV5.2_FECHADA" OR ("EV5.2_ABERTA" AND "EV5.2_FECHADA"))) THEN
	        #"avaria_ev5.2" := TRUE;
	    ELSE
	        #"avaria_ev5.2" := FALSE;
	    END_IF;
	    
	    
	    IF #"avaria_ev5.2" = FALSE AND "EV5.2_ABERTA" AND NOT "EV5.2_FECHADA" THEN //Condição de EV5.2 ABERTA
	        "Estados_HMI"."EV5.2_ESTADO" := 1;
	        "Estados_HMI"."EV5.2_ESTADO_PAGCMD" := 1;
	    END_IF;
	    
	    
	    IF #"avaria_ev5.2" = FALSE AND "EV5.2_FECHADA" AND NOT "EV5.2_ABERTA" THEN //Condição de EV5.2 Fechada
	        "Estados_HMI"."EV5.2_ESTADO" := 0;
	        "Estados_HMI"."EV5.2_ESTADO_PAGCMD" := 0;
	    END_IF;
	    
	    
	    IF ("T_ABERTURA_EV5.2_HMI".Q AND (NOT "EV5.2_ABERTA" OR ("EV5.2_ABERTA" AND "EV5.2_FECHADA"))) OR   //Condição de avaria
	        ("T_FECHO_EV5.2_HMI".Q AND (NOT "EV5.2_FECHADA" OR ("EV5.2_ABERTA" AND "EV5.2_FECHADA"))) THEN
	        
	        "Estados_HMI"."EV5.2_ESTADO_PAGCMD" := 2;
	        
	        CASE #"temp_clock_0.625Hz" OF
	            0:
	                "Estados_HMI"."EV5.2_ESTADO" := 0;
	            1:
	                "Estados_HMI"."EV5.2_ESTADO" := 2;
	        END_CASE;
	    END_IF;
	    
	    IF "T_ABERTURA_EV5.2_HMI".Q = FALSE AND "T_FECHO_EV5.2_HMI".Q = FALSE AND
	        "EV5.2_ABERTA" = FALSE AND "EV5.2_FECHADA" = FALSE THEN  //Condição de transição das EVs
	        
	        "Estados_HMI"."EV5.2_ESTADO_PAGCMD" := 3;
	        
	        CASE #"temp_clock_0.625Hz" OF
	            0:
	                "Estados_HMI"."EV5.2_ESTADO" := 0;
	            1:
	                "Estados_HMI"."EV5.2_ESTADO" := 3;
	        END_CASE;
	    END_IF;
	    
	END_REGION
END_FUNCTION

